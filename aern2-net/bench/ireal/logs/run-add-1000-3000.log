computing add (1000 times) using accuracy 3000
accuracies = [Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000,Bits 3000]
	Command being timed: "ireal-benchOp add 1000 3000"
	User time (seconds): 0.11
	System time (seconds): 0.02
	Percent of CPU this job got: 377%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.03
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9628
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1596
	Voluntary context switches: 375
	Involuntary context switches: 1774
	Swaps: 0
	File system inputs: 0
	File system outputs: 24
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
